{"version":3,"sources":["components/EmailForm.js","utils/DateUtils.js","model/Entry.js","components/EntryList.js","model/Reminder.js","model/Event.js","components/Widgets.js","components/EventForm.js","model/Meeting.js","components/MeetingForm.js","components/ReminderForm.js","components/EntryForm.js","model/Calendar.js","components/Calendar.js","App.js","serviceWorker.js","index.js"],"names":["EmailForm","value","onChange","onSubmit","children","className","type","DateUtils","date","year","getFullYear","month","getMonth","day","getDate","this","leadingZero","hours","getHours","minutes","getMinutes","number","n","toString","length","time","minus","timeTotal","timeToMinutes","minusTotal","minutesTotime","timeArray","split","map","s","parseInt","quotient","Math","floor","remainder","Entry","_date","Date","toDate","toTime","_label","label","_interval","interval","_repeat","repeat","EntryList","entries","props","entry","Component","Reminder","note","_note","Event","reminder","_reminder","Input","htmlFor","Checkbox","checked","Select","options","item","key","Textarea","EventForm","fn","event","state","addReminder","subtractTime","preventDefault","onDateChange","setState","currentTarget","onTimeChange","onLabelChange","onRepeatChange","onIntervalChange","onAddReminderChange","createEntry","Meeting","_attendees","attendee","includes","push","reduce","acc","forEach","MeetingForm","attendees","addAttendee","trim","onAttendeesChange","ReminderForm","onNoteChange","EntryForm","runAddEntry","entryType","modifyEntryType","selectFormComponent","addEntryFn","addEntry","onClick","Calendar","email","_email","_entries","filter","fullDate","nextWeek","setDate","CalendarWidget","calendar","id","getTodayEntries","getThisWeekEntries","App","onEmailFormChange","onEmailFormSubmit","setInterval","updateDate","clearInterval","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.69bc91ae.chunk.js","sourcesContent":["import React from 'react';\n\nconst EmailForm = ({value, onChange, onSubmit, children}) =>\n  <form onSubmit={onSubmit} className=\"email-form\"> \n    <input \n      type=\"text\"\n      value={value}\n      onChange={onChange} \n    />\n    <button type=\"submit\">{children}</button>\n  </form>\n\nexport {EmailForm};\n    \n","// @flow\n\nclass DateUtils {\n\n  static toDate(date: Date): string{\n    let year = date.getFullYear();\n    let month = date.getMonth() + 1;\n    let day = date.getDate();\n\n    return year + \"-\" + this.leadingZero(month) + \"-\" + this.leadingZero(day)\n  }\n\n  static toTime(date: Date): string{\n    let hours = date.getHours();\n    let minutes = date.getMinutes();\n    \n    return this.leadingZero(hours) + \":\" + this.leadingZero(minutes)\n  };\n\n  // EFFECTS: returns a string with a leading zero if number is one single digit\n  static leadingZero(number: number): string{\n    let n = number.toString();\n    if (n.length == 1) {\n      return \"0\" + n;\n    }\n    return n;\n  }\n  \n  // REQUIRES: time and minus to be of the form 'HH:MM'\n  // EFFECTS: returns a string representing the given time minus the \"minus\" time\n  static subtractTime(time : string, minus : string): string {\n    let timeTotal = this.timeToMinutes(time);\n    let minusTotal = this.timeToMinutes(minus);\n\n    if (!timeTotal){\n      return ''\n    }\n\n    if (!minusTotal) {\n      return time\n    }\n\n    return this.minutesTotime(timeTotal - minusTotal);\n  }\n\n  static timeToMinutes(time : string): number {\n    let timeArray = time.split(':').map((s) => parseInt(s, 10));\n    return (timeArray[0] * 60) + timeArray[1];\n  }\n\n  static minutesTotime(minutes : number): string {\n    let quotient = Math.floor(minutes/60);\n    let remainder = minutes % 60;\n\n    return this.leadingZero(quotient) + ':' + this.leadingZero(remainder);\n  }\n}\n\nexport {DateUtils};\n\n","// @flow\n\nimport {DateUtils} from '../utils/DateUtils.js';\n\ntype Interval = 'daily' | 'weekly' | 'monthly' | 'annually';\n\nclass Entry {\n\n   _date : Date\n   _label : string\n   _repeat: boolean\n   _interval: Interval\n\n  // REQUIRES: date and time are in ISO format 'YYYY-MM-DD' 'HH:MM'\n  // MODIFIES: this\n  // EFFECTS: Set date and time during initialization\n  constructor(date: string, time: string): void{\n    this._date = new Date(date + 'T' + time);\n  };\n\n  // EFFECTS: returns date without time\n  get fullDate(): Date{\n    return this._date;\n  };\n\n  // EFFECTS: returns date without time\n  get date(): string{\n    return DateUtils.toDate(this._date);\n  };\n\n  // EFFECTS: returns time without date\n  get time(): string{\n    return DateUtils.toTime(this._date);\n  };\n\n  // EFFECTS: returns label\n  get label(): string{\n    return this._label;\n  };\n\n  // EFFECTS: returns interval\n  get interval(): Interval{\n    return this._interval;\n  };\n\n  // EFFECTS: returns repeat\n  get repeat(): boolean{\n    return this._repeat;\n  };\n\n  // REQUIRES: date to be in ISO format 'YYYY-MM-DD'\n  // MODIFIES: this\n  // EFFECTS: set date, using existing time or 00:00\n  set date(date: string): void{\n    let time = this.time\n    this._date = new Date(date + 'T' + time);\n  };\n\n  // REQUIRES: time to be in ISO format 'HH:MM:SS'\n  // MODIFIES: this\n  // EFFECTS: set date using date from existing date or now.\n  set time(time: string): void{\n    let date = this.date\n    this._date = new Date(date + 'T' + time);\n  };\n\n  // MODIFIES: this\n  set label(label: string): void{\n    this._label = label;\n  };\n\n  // REQUIRES: interval to be one of (daily, weekly, monthly, annually)\n  // MODIFIES: this\n  // EFFECTS: set interval of repetition.\n  set interval(interval: Interval): void{\n    this._interval = interval;\n  };\n\n  // EFFECTS: returns repeat\n  set repeat(repeat: boolean): void{\n    this._repeat = repeat;\n  };\n}\n\nexport { Entry };\n","// @flow\n\nimport React, { Component } from 'react';\nimport './EntryList.css';\nimport {Entry} from '../model/Entry';\n\ntype Props = {\n  entries : Array<Entry>\n}\n\nclass EntryList extends Component<Props> {\n  render(){\n    const {entries} = this.props;\n\n    return (\n      <table className=\"entry-list-table\">\n      { entries.map((entry) =>\n          <tr>\n            <td>{entry.date}</td>\n            <td>{entry.time}</td>\n            <td>{entry.label}</td>\n          </tr>\n        )\n      }\n      </table>\n    );\n  };\n}\n\nexport {EntryList};\n","// @flow\n\nimport {Entry} from './Entry.js';\n\nclass Reminder extends Entry {\n  _note : string;\n\n  // MODIFIES: this\n  // EFFECTS: Set note\n  set note(note: string): void{\n    this._note = note\n  };\n  \n  // EFFECTS: returns note\n  get note(): string{\n    return this._note;\n  };\n\n}\n\nexport {Reminder};\n","// @flow\n\nimport {Entry} from './Entry.js';\nimport {Reminder} from './Reminder.js';\n\nclass Event extends Entry {\n  _reminder : Reminder;\n\n  // MODIFIES: this\n  // EFFECTS: Set reminder\n  set reminder(reminder: Reminder): void{\n    this._reminder = reminder;\n  };\n\n  // EFFECTS: returns reminder\n  get reminder(): Reminder{\n    return this._reminder;\n  };\n\n}\n\nexport {Event};\n","// @flow\n\nimport React, { Component } from 'react';\n\ntype InputProps = \n  { value : string, \n    onChange : (SyntheticEvent<HTMLInputElement>)=>void, \n    label : string\n  }\n\nfunction Input(props : InputProps) { \n  const { value, onChange, label} = props;\n\n  return (\n    <div>\n      <label htmlFor={label}>{label}:</label>\n      <input \n        type=\"text\"\n        value={value}\n        onChange={onChange}\n      />\n    </div>\n  );\n}\n\ntype CheckboxProps = \n  { value : boolean, \n    onChange : (SyntheticEvent<HTMLInputElement>)=>void, \n    label : string\n  }\n\nfunction Checkbox(props : CheckboxProps) { \n  const { value, onChange, label} = props;\n\n  return (\n    <div>\n      <label htmlFor={label}>{label}:</label>\n      <input \n        type=\"checkbox\"\n        checked={value}\n        onChange={onChange}\n      />\n    </div>\n  );\n}\n\ntype SelectProps = \n  { value : string, \n    onChange : (SyntheticEvent<HTMLSelectElement>)=>void, \n    label : string,\n    options : Array<string>\n  }\n\nfunction Select(props : SelectProps) { \n  const { value, onChange, label, options} = props;\n\n  return (\n    <div>\n      <label htmlFor={label}>{label}:</label>\n      <select value={value} onChange={onChange}>\n      { options.map((item) => (\n          <option key={item} value={item}>{item}</option> \n          )\n        )\n      }\n      </select>\n    </div>\n  );\n}\n\ntype TextareaProps = \n  { value : string, \n    onChange : (SyntheticEvent<HTMLTextAreaElement>)=>void, \n    label : string\n  }\n\nfunction Textarea(props : TextareaProps) { \n  const { value, onChange, label} = props;\n\n  return (\n    <div>\n      <label htmlFor={label}>{label}:</label>\n      <textarea value={value} onChange={onChange} />\n    </div>\n  );\n}\n\nexport {Input, Checkbox, Select, Textarea};\n","// @flow\n\nimport React, { Component } from 'react';\nimport {Entry} from '../model/Entry';\nimport {Event} from '../model/Event';\nimport {Reminder} from '../model/Reminder';\nimport {Input, Checkbox, Select} from './Widgets';\nimport {DateUtils} from '../utils/DateUtils';\n\ntype Interval = 'daily' | 'weekly' | 'monthly' | 'annually';\n\ntype Props = {\n  createEntry : (Entry)=>void\n}\n\ntype State = {\n  date : string,\n  time : string,\n  label : string,\n  interval : Interval,\n  repeat : boolean,\n  addReminder: boolean\n}\n\nclass EventForm extends Component<Props, State> {\n\n  constructor(props: Props) {\n    super(props);\n    this.state = {\n      date: '',\n      time: '',\n      label: '',\n      repeat: false,\n      interval: 'daily',\n      addReminder: false\n    }\n  }\n\n  // REQUIRES: a function that received an entry\n  // EFFECTS: Create an Reminder entry and call the function with the entry\n  onSubmit = (fn : (Entry) => void, event : SyntheticEvent<HTMLFormElement>) => {\n    const entry = new Event(this.state.date, this.state.time);\n    entry.label = this.state.label;\n    entry.repeat = this.state.repeat;\n    entry.interval = this.state.interval;\n    if (this.state.addReminder) {\n      entry.reminder = new Reminder(\n        this.state.date, \n        DateUtils.subtractTime(this.state.time, '01:00')\n      );\n    }\n    fn(entry);\n\n    event.preventDefault();\n  }\n\n  onDateChange = (event : SyntheticEvent<HTMLInputElement>) => {\n    this.setState({date: event.currentTarget.value});\n  }\n\n  onTimeChange = (event : SyntheticEvent<HTMLInputElement>) => {\n    this.setState({time: event.currentTarget.value});\n  }\n\n  onLabelChange = (event : SyntheticEvent<HTMLInputElement>) => {\n    this.setState({label: event.currentTarget.value});\n  }\n\n  onRepeatChange = (event : SyntheticEvent<HTMLInputElement>) => {\n    this.setState({repeat: event.currentTarget.checked});\n  }\n\n  onIntervalChange = (event : SyntheticEvent<HTMLSelectElement>) => {\n    this.setState({interval: event.currentTarget.value });\n  }\n\n  onAddReminderChange = (event : SyntheticEvent<HTMLInputElement>) => {\n    this.setState({addReminder: event.currentTarget.checked});\n  }\n\n  render() {\n    const {date, time, label, repeat, interval, addReminder} = this.state;\n    const {createEntry} = this.props;\n\n    return (\n      <form onSubmit={(event) => this.onSubmit(createEntry, event)} className=\"email-form\"> \n        <Input \n          label=\"date\"\n          value={date}\n          onChange={this.onDateChange} \n        />\n       <Input \n          label=\"time\"\n          value={time}\n          onChange={this.onTimeChange} \n        />\n        <Input \n          label=\"label\"\n          value={label}\n          onChange={this.onLabelChange} \n        />\n        <Checkbox\n          label=\"repeat\"\n          value={repeat}\n          onChange={this.onRepeatChange}\n        />\n        <Select\n          label=\"Interval\"\n          value={interval}\n          onChange={this.onIntervalChange}\n          options={['daily', 'weekly', 'monthly', 'annually']}\n        />\n        <Checkbox\n          label=\"Add reminder\"\n          value={addReminder}\n          onChange={this.onAddReminderChange}\n        />\n        <button type=\"submit\">Add Event</button>\n      </form>\n    )\n  }\n}\n\nexport {EventForm};\n","// @flow\n\nimport {Event} from './Event.js';\n\nclass Meeting extends Event{\n  _attendees : Array<string>;\n\n  //constructor {super something, initilize empty array}\n  constructor(date: string, time: string): void{\n    super(date, time);\n    this._attendees = []\n  };\n  \n  // EFFECTS: returns list of attendee\n  get attendees(): Array<string>{\n    return this._attendees\n  };\n\n  // REQUIRES: attendee to be a valid email\n  // MODIFIES: this\n  // EFFECTS: add attendee to the list\n  addAttendee(attendee: string): void{\n    if (!this._attendees.includes(attendee)){\n      this._attendees.push(attendee)\n    };\n  };\n\n  // REQUIRES: attendee to be a valid email\n  // MODIFIES: this\n  // EFFECTS: remove attendee from the list\n  removeAttendee(attendee: string): void{\n    this._attendees = this._attendees.reduce(\n      (acc, item) => {\n        if (item != attendee) {\n          acc.push(item)\n        }\n        return acc\n      }, \n      []\n    )\n  };\n\n  // REQUIRES: a function that received an email as argument\n  // EFFECTS: use fn to send email to each attendee\n  sendInvites(fn: (string) => void): void{\n    this._attendees.forEach(fn);\n  };\n}\n\nexport {Meeting}\n","// @flow\n\nimport React, { Component } from 'react';\nimport {Entry} from '../model/Entry';\nimport {Meeting} from '../model/Meeting';\nimport {Reminder} from '../model/Reminder';\nimport {DateUtils} from '../utils/DateUtils';\nimport {Input, Checkbox, Select, Textarea} from './Widgets';\n\ntype Interval = 'daily' | 'weekly' | 'monthly' | 'annually';\n\ntype Props = {\n  createEntry : (Entry)=>void\n}\n\ntype State = {\n  date : string,\n  time : string,\n  label : string,\n  interval : Interval,\n  repeat : boolean,\n  addReminder: boolean,\n  attendees : string\n}\n\nclass MeetingForm extends Component<Props, State> {\n\n  constructor(props: Props) {\n    super(props);\n    this.state = {\n      date: '',\n      time: '',\n      label: '',\n      repeat: false,\n      interval: 'daily',\n      addReminder: false,\n      attendees: ''\n    }\n  }\n\n  // REQUIRES: a function that received an entry\n  // EFFECTS: Create an Reminder entry and call the function with the entry\n  onSubmit = (fn : (Entry) => void, event : SyntheticEvent<HTMLFormElement>) => {\n    const entry = new Meeting(this.state.date, this.state.time);\n    entry.label = this.state.label;\n    entry.repeat = this.state.repeat;\n    entry.interval = this.state.interval;\n\n    if (this.state.addReminder) {\n      entry.reminder = new Reminder(\n        this.state.date, \n        DateUtils.subtractTime(this.state.time, '01:00')\n      );\n    }\n    \n    for (let attendee of this.state.attendees.split(',')) { \n      entry.addAttendee(attendee.trim());\n    }\n\n    fn(entry);\n\n    event.preventDefault();\n  }\n\n  onDateChange = (event : SyntheticEvent<HTMLInputElement>) => {\n    this.setState({date: event.currentTarget.value});\n  }\n\n  onTimeChange = (event : SyntheticEvent<HTMLInputElement>) => {\n    this.setState({time: event.currentTarget.value});\n  }\n\n  onLabelChange = (event : SyntheticEvent<HTMLInputElement>) => {\n    this.setState({label: event.currentTarget.value});\n  }\n\n  onRepeatChange = (event : SyntheticEvent<HTMLInputElement>) => {\n    this.setState({repeat: event.currentTarget.checked});\n  }\n\n  onIntervalChange = (event : SyntheticEvent<HTMLSelectElement>) => {\n    this.setState({interval: event.currentTarget.value });\n  }\n\n  onAddReminderChange = (event : SyntheticEvent<HTMLInputElement>) => {\n    this.setState({addReminder: event.currentTarget.checked});\n  }\n\n  onAttendeesChange = (event : SyntheticEvent<HTMLTextAreaElement>) => {\n    this.setState({attendees: event.currentTarget.value});\n  }\n\n  render() {\n    const {date, time, label, repeat, interval, addReminder, attendees} = this.state;\n    const {createEntry} = this.props;\n\n    return (\n      <form onSubmit={(event) => this.onSubmit(createEntry, event)} className=\"email-form\"> \n        <Input \n          label=\"date\"\n          value={date}\n          onChange={this.onDateChange} \n        />\n       <Input \n          label=\"time\"\n          value={time}\n          onChange={this.onTimeChange} \n        />\n        <Input \n          label=\"label\"\n          value={label}\n          onChange={this.onLabelChange} \n        />\n        <Checkbox\n          label=\"repeat\"\n          value={repeat}\n          onChange={this.onRepeatChange}\n        />\n        <Select\n          label=\"Interval\"\n          value={interval}\n          onChange={this.onIntervalChange}\n          options={['daily', 'weekly', 'monthly', 'annually']}\n        />\n        <Checkbox\n          label=\"Add reminder\"\n          value={addReminder}\n          onChange={this.onAddReminderChange}\n        />\n        <Textarea\n          label=\"Attendees\"\n          value={attendees}\n          onChange={this.onAttendeesChange}\n        />\n        <button type=\"submit\">Add Meeting</button>\n      </form>\n    )\n  }\n}\n\nexport {MeetingForm};\n","// @flow\n\nimport React, { Component } from 'react';\nimport {Entry} from '../model/Entry';\nimport {Reminder} from '../model/Reminder';\nimport {Input, Checkbox, Select, Textarea} from './Widgets';\n\ntype Interval = 'daily' | 'weekly' | 'monthly' | 'annually';\n\ntype Props = {\n  createEntry : (Entry)=>void\n}\n\ntype State = {\n  date : string,\n  time : string,\n  label : string,\n  interval : Interval,\n  repeat : boolean,\n  note : string\n}\n\nclass ReminderForm extends Component<Props, State> {\n\n  constructor(props: Props) {\n    super(props);\n    this.state = {\n      date: '',\n      time: '',\n      label: '',\n      repeat: false,\n      interval: 'daily',\n      note: ''\n    }\n  }\n\n  // REQUIRES: a function that received an entry\n  // EFFECTS: Create an Reminder entry and call the function with the entry\n  onSubmit = (fn : (Entry) => void, event : SyntheticEvent<HTMLFormElement>) => {\n    const entry = new Reminder(this.state.date, this.state.time);\n    entry.label = this.state.label;\n    entry.repeat = this.state.repeat;\n    entry.interval = this.state.interval;\n    entry.note = this.state.note;\n    fn(entry);\n\n    event.preventDefault();\n  }\n\n  onDateChange = (event : SyntheticEvent<HTMLInputElement>) => {\n    this.setState({date: event.currentTarget.value});\n  }\n\n  onTimeChange = (event : SyntheticEvent<HTMLInputElement>) => {\n    this.setState({time: event.currentTarget.value});\n  }\n\n  onLabelChange = (event : SyntheticEvent<HTMLInputElement>) => {\n    this.setState({label: event.currentTarget.value});\n  }\n\n  onRepeatChange = (event : SyntheticEvent<HTMLInputElement>) => {\n    this.setState({repeat: event.currentTarget.checked});\n  }\n\n  onIntervalChange = (event : SyntheticEvent<HTMLSelectElement>) => {\n    this.setState({interval: event.currentTarget.value });\n  }\n\n  onNoteChange = (event : SyntheticEvent<HTMLTextAreaElement>) => {\n    this.setState({note: event.currentTarget.value });\n  }\n\n  render() {\n    const {date, time, label, repeat, interval, note} = this.state;\n    const {createEntry} = this.props;\n\n    return (\n      <form onSubmit={(event) => this.onSubmit(createEntry, event)} className=\"email-form\"> \n        <Input \n          label=\"date\"\n          value={date}\n          onChange={this.onDateChange} \n        />\n       <Input \n          label=\"time\"\n          value={time}\n          onChange={this.onTimeChange} \n        />\n        <Input \n          label=\"label\"\n          value={label}\n          onChange={this.onLabelChange} \n        />\n        <Checkbox\n          label=\"repeat\"\n          value={repeat}\n          onChange={this.onRepeatChange}\n        />\n        <Select\n          label=\"Interval\"\n          value={interval}\n          onChange={this.onIntervalChange}\n          options={['daily', 'weekly', 'monthly', 'annually']}\n        />\n        <Textarea\n          label=\"Note\"\n          value={note}\n          onChange={this.onNoteChange}\n        />\n        <button type=\"submit\">Add Reminder</button>\n      </form>\n    )\n  }\n}\n\nexport {ReminderForm};\n","// @flow\n\nimport React, { Component } from 'react';\nimport {Entry} from '../model/Entry';\nimport {EventForm} from './EventForm';\nimport {MeetingForm} from './MeetingForm';\nimport {ReminderForm} from './ReminderForm';\n\ntype EntryType = '' | 'event' | 'meeting' | 'reminder';\n\ntype Props = {\n  addEntry : (Entry)=>void\n}\n\ntype State = {\n  entryType : EntryType\n}\n\nclass EntryForm extends Component<Props, State> {\n\n  constructor(props: Props){\n    super(props);\n    this.state = {\n      entryType: ''\n    }\n  }\n\n  runAddEntry = (entry : Entry, fn : (Entry)=>void) => {\n    this.setState({entryType: ''});\n    fn(entry);\n  }\n\n  modifyEntryType = (event: SyntheticEvent<HTMLButtonElement>) => {\n    this.setState({entryType: event.currentTarget.value});\n\n    event.preventDefault();\n  }\n\n  selectFormComponent = (entryType: EntryType, addEntryFn : (Entry)=>void) => {\n    switch (entryType) {\n    case 'event':\n      return (<EventForm createEntry={(entry) => this.runAddEntry(entry, addEntryFn)} />);\n    case 'meeting':\n      return (<MeetingForm createEntry={(entry) => this.runAddEntry(entry, addEntryFn)} />);\n    case 'reminder':\n      return (<ReminderForm createEntry={(entry) => this.runAddEntry(entry, addEntryFn)} />);\n    default:\n      return (<div></div>);\n    }\n  }\n\n  render(){\n    const {addEntry} = this.props;\n    const {entryType} = this.state;\n\n    return (\n      <div className=\"entry-form\">\n        <div className=\"form-menu\">\n          <button \n            value=\"event\"\n            onClick={this.modifyEntryType}\n            type=\"button\">\n              Add Event\n          </button>\n          <button \n            value=\"meeting\"\n            onClick={this.modifyEntryType}\n            type=\"button\">\n              Add Meeting\n          </button>\n          <button \n            value=\"reminder\"\n            onClick={this.modifyEntryType}\n            type=\"button\">\n              Add Reminder\n          </button>\n        </div>\n        <div className=\"form\">\n        { this.selectFormComponent(entryType, addEntry) }\n        </div>\n      </div>\n    );\n  }; \n}\n\nexport {EntryForm};\n","// @flow\n\nimport {Entry} from './Entry.js';\nimport {DateUtils} from '../utils/DateUtils.js';\n\nclass Calendar {\n  _date : Date;\n  _email : string;\n  _entries : Array<Entry>;\n\n  // REQUIRES: email to be a valid email\n  // MODIFIES: this\n  // EFFECTS: Set date to now, email to given string and initialize entries\n  constructor(email: string): void{\n    this._date = new Date();\n    this._email = email;\n    this._entries = [];\n  };\n\n  // EFFECTS: return date as a string\n  get date(): string{\n    return DateUtils.toDate(this._date);\n  };\n  \n  // EFFECTS: return time as a string\n  get time(): string{\n    return DateUtils.toTime(this._date);\n  };\n  \n  // EFFECTS: return email\n  get email(): string{\n    return this._email;\n  };\n  \n  // REQUIRES: email to be a valid email\n  // MODIFIES: this\n  // EFFECTS: Set email to given string\n  set email(email: string): void{\n    this._email = email;\n  };\n  \n  // MODIFIES: this\n  // EFFECTS: Set date to now\n  updateDate(): void{\n    this._date = new Date();\n  };\n  \n  // MODIFIES: this\n  // EFFECTS: add entry to entries\n  addEntry(entry: Entry): void{\n    this._entries.push(entry);\n  };\n  \n  // MODIFIES: this\n  // EFFECTS: delete entry from entry list\n  removeEntry(entry: Entry): void{\n    this._entries = this._entries.reduce(\n      (acc, item) => {\n        if (item != entry) {\n          acc.push(item);\n        }\n        return acc\n      },\n      []\n    )\n  };\n  \n  // EFFECTS: return list of entries whose date is today. \n  getTodayEntries(): Array<Entry>{\n    let todayEntries = this._entries.filter(entry => entry.date == this.date);\n    return todayEntries.filter(entry => entry.fullDate > this._date);\n  };\n  \n  // EFFECTS: return list of entries whose date is in the next seven days\n  getThisWeekEntries(): Array<Entry>{\n    let nextWeek = new Date(this._date.toString());\n    nextWeek.setDate(nextWeek.getDate() + 7);\n\n    return this._entries.filter(entry => entry.fullDate > this._date && entry.fullDate < nextWeek);\n  };\n\n  getEntryByLabel(label: string): ?Entry{\n    for (let entry of this._entries) {\n      if (entry.label == label) {\n        return entry;\n      }\n    }\n  }\n}\n\nexport {Calendar};\n","// @flow\n\nimport React, { Component } from 'react';\nimport {EntryList} from './EntryList';\nimport {EntryForm} from './EntryForm';\nimport {Calendar} from '../model/Calendar';\n\ntype Props = {\n  calendar : Calendar\n}\n\nclass CalendarWidget extends Component<Props> {\n\n  render(){\n    const {calendar} = this.props;\n\n    return (\n      <div id=\"calendar\">\n        <h2>{calendar.date + ' ' + calendar.time}</h2>\n        <div className=\"add-entry\">\n          <EntryForm addEntry={(entry) => calendar.addEntry(entry)} />\n        </div>\n        <div className=\"entry-list\">\n          <h3>Today</h3>\n          <EntryList entries={calendar.getTodayEntries()} />\n        </div>\n        <div className=\"entry-list\">\n          <h3>This week</h3>\n          <EntryList entries={calendar.getThisWeekEntries()} />\n        </div>\n      </div>\n    )\n  }\n}\n\nexport {CalendarWidget};\n","// @flow\n\nimport React, { Component } from 'react';\nimport './App.css';\nimport {EmailForm} from './components/EmailForm'\nimport {CalendarWidget} from './components/Calendar';\nimport {Calendar} from './model/Calendar'\n\ntype Props = {}\n\ntype State = {\n  email : string,\n  calendar : ?Calendar\n}\n\nclass App extends Component<Props, State> {\n\n  constructor(props: Props){\n    super(props);\n    this.state = {\n      email: '',\n      calendar: null\n    };\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.interval);\n  }\n\n  onEmailFormChange = (event: SyntheticEvent<HTMLInputElement>) => {\n    this.setState({email: event.currentTarget.value});\n  }\n\n  onEmailFormSubmit = (event: SyntheticEvent<HTMLFormElement>) => {\n    const {email} = this.state;\n    this.setState({calendar: new Calendar(email)});\n\n    this.interval = setInterval(() => {\n      const {calendar} = this.state;\n      calendar.updateDate();\n      this.setState({ calendar: calendar });\n    }, 30000);\n\n    event.preventDefault();\n  };\n\n  render(){\n    const { email, calendar } = this.state;\n\n    return (\n      <div id=\"App\">\n        <h1>Calendar</h1>\n        { calendar\n          ? <CalendarWidget calendar={calendar} />\n          : <EmailForm\n              value={email}\n              onChange={this.onEmailFormChange}\n              onSubmit={this.onEmailFormSubmit}\n            >\n              Set email\n            </EmailForm>\n        }\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\nif (module.hot) {\n  module.hot.accept();\n}\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}